# Makefile generated by BNFC.

GHC        = ghc
HAPPY      = happy
HAPPY_OPTS = --array --info --ghc --coerce
ALEX       = alex
ALEX_OPTS  = --ghc -i
TEST 	   = TestProgettoPar
TEST_OPTS  = --test

# List of goals not corresponding to file names.

.PHONY : all clean distclean

# Default goal.

all : TestProgettoPar

# Rules for building the parser.

%.hs : %.y
	${HAPPY} ${HAPPY_OPTS} $<

%.hs : %.x
	${ALEX} ${ALEX_OPTS} $<

TestProgettoPar : AbsProgettoPar.hs LexProgettoPar.hs ParProgettoPar.hs PrintProgettoPar.hs TestProgettoPar.hs
	${GHC} ${GHC_OPTS} $@

# Rules for cleaning generated files.

demo:
	@${TEST} ${TEST_OPTS}

clean :
	-rm -f *.hi *.o *.log *.aux *.dvi

distclean : clean
	-rm -f AbsProgettoPar.hs AbsProgettoPar.hs.bak ComposOp.hs ComposOp.hs.bak DocProgettoPar.txt DocProgettoPar.txt.bak ErrM.hs ErrM.hs.bak LayoutProgettoPar.hs LayoutProgettoPar.hs.bak LexProgettoPar.x LexProgettoPar.x.bak ParProgettoPar.y ParProgettoPar.y.bak PrintProgettoPar.hs PrintProgettoPar.hs.bak SkelProgettoPar.hs SkelProgettoPar.hs.bak TestProgettoPar.hs TestProgettoPar.hs.bak XMLProgettoPar.hs XMLProgettoPar.hs.bak ASTProgettoPar.agda ASTProgettoPar.agda.bak ParserProgettoPar.agda ParserProgettoPar.agda.bak IOLib.agda IOLib.agda.bak Main.agda Main.agda.bak progetto3par.dtd progetto3par.dtd.bak TestProgettoPar LexProgettoPar.hs ParProgettoPar.hs ParProgettoPar.info ParDataProgettoPar.hs Makefile


# EOF
